Code to generate Invoice:

InvoiceCoding.cls:

global with sharing class InvoiceCoding {
       private static final String DEFAULT_INVOICE_HEADER_HEIGHT = '100';
       private static final String DEFAULT_INVOICE_FOOTER_HEIGHT = '50';
       webService static String genInvoice(List<Id> oppsId) {
		try {
			
			final Set<Id> oppsId = new Set<Id>(oppsIdList);
                        final String templateId = Application_Properties__c.getAll().get('Invoice_Template_Id').value__c;
			String iHeaderHeight = Application_Properties__c.getAll().get('Invoice_Header_Height').value__c;
			String iFooterHeight = Application_Properties__c.getAll().get('Invoice_Footer_Height').value__c;
			final String quoteTemplateDataViewerUrl = Application_Properties__c.getAll().get('Quote_Template_Data_Viewer_URL').value__c;
			if (String.isBlank(invoiceTemplateId) || String.isBlank(quoteTemplateDataViewerUrl)) {
				String errorMsg = 'Id or url is blank .plz check with it.';

				return errorMsg;
			}
			if (String.isBlank(iHeaderHeight)) iHeaderHeight = DEFAULT_INVOICE_HEADER_HEIGHT;
			if (String.isBlank(iFooterHeight)) iFooterHeight = DEFAULT_INVOICE_FOOTER_HEIGHT; 

			
			final List<Attachment> attList = new List<Attachment>();
			for (Opportunity opp : [select Id,(select Id, Invoice_no__c, IsSync, CreatedDate from Quotes
	                                       order by CreatedDate DESC) from Opportunity where Id IN :oppsId]) {
		        if (opp.Quotes.isEmpty()) continue;
                        Quote theQuote = null;
                                for (Quote quoteAux : opp.Quotes) {
					if (quoteAux.IsSyncing) {
						theQuote = quoteAux;
						break;
					}
				}
			if (!attList.isEmpty()) insert attList;
			return '';
		      } catch (Exception e) {
			System.debug(LoggingLevel.ERROR, e.getMessage());

			final String errorMsg = 'error occured while generating the invoice. Details:\n\n' +
									 e.getMessage() + '\n\n' +
									 e.getStackTraceString();
			
			return errorMsg;
		}
	}
}





<?xml version="1.0" encoding="UTF-8"?>
<ApexClass xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>29.0</apiVersion>
    <status>Active</status>
</ApexClass>


Opportunity.Object

<?xml version="1.0" encoding="UTF-8"?>
<CustomObject xmlns="http://soap.sforce.com/2006/04/metadata">
    <webLinks>
        <fullName>Gen_Invoice</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Gen Invoice</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/soap/ajax/29.0/connection.js&quot;)}
        {!REQUIRESCRIPT(&quot;/soap/ajax/29.0/apex.js&quot;)}
        var oppId = &apos;{!Opportunity.Id}&apos;;
        var errorMsg = sforce.apex.execute(&quot;valnavjo/InvoicePdfWsSample&quot;, &quot;generateInvoicePdf&quot;, {oppsIdList:oppId});
         if (errorMsg != &apos;&apos;) alert(errorMsg);
        else window.location.reload();</url>
       </webLinks>
</CustomObject>



